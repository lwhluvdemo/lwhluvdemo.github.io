{"meta":{"title":"水上书呀","subtitle":"君子慎独","description":"个人博客","author":"lwhluvdemo","url":"https://lwhluvdemo.github.io","root":"/"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-07-30T01:43:25.275Z","updated":"2019-07-30T07:24:39.421Z","comments":true,"path":"2019/07/30/cjypieigf00007oudh156rxds/","link":"","permalink":"https://lwhluvdemo.github.io/2019/07/30/cjypieigf00007oudh156rxds/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"GitHub Pages and Hexo","slug":"GitHub Pages and Hexo","date":"2019-07-29T01:42:39.000Z","updated":"2019-07-30T08:42:48.884Z","comments":true,"path":"2019/07/29/cjypl5opq0000fkud8x95igzb/","link":"","permalink":"https://lwhluvdemo.github.io/2019/07/29/cjypl5opq0000fkud8x95igzb/","excerpt":"GitHub Pages 首先可以看这篇文章在GitHub上创建和托管个人网站，熟悉一下git的基本工作流程以及在GitHub上创建和托管个人网站实施步骤，以便对一些模糊的概念有所理解。熟悉工作流程或者不感兴趣的话可以跳过这一步，并不影响整个博客的搭建。","text":"GitHub Pages 首先可以看这篇文章在GitHub上创建和托管个人网站，熟悉一下git的基本工作流程以及在GitHub上创建和托管个人网站实施步骤，以便对一些模糊的概念有所理解。熟悉工作流程或者不感兴趣的话可以跳过这一步，并不影响整个博客的搭建。 创建项目的存储库。登录您的GitHub帐户并转到https://github.com/new，或点击您帐户主页上的新建存储库图标。 为存储库命名username.github.io，替换username为您的GitHub用户名(命名格式必须严格按照这个)。然后确保它是公开的(Public)，勾选创建README文件选项，然后创建存储库。 Hexo 环境搭建参考自：Hexo官方文档 安装Git：从其官网下载务必挂代理，没有的话从这个页面下载存储于百度云的资源。 安装Node.js 对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。 另外，也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，可以考虑始终使用Git Bash来进行操作。 安装Hexo由于某些大家都知道的缘故，npm官方源在国内的下载速度极其慢，用官网的npm install hexo-cli -g速度非常感人，所以不推荐这种方式。推荐用淘宝的npm分流–cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org 之后的用法和npm一样，无非是把npm install改成cnpm install,但是速度比之前快了不止一个数量级。 检查： node -v,git --version,hexo -v。 除特殊说明，所有命令行语句都在/d/blog路径下进行，并且只用Git Bash，不要用CMD 本地博客 任选一位置创建文件夹 blog，在blog文件夹空白处右键选择 Git Bash Here. 输入 hexo init 将 blog 文件夹初始化成一个博客文件夹。 输入 npm install –&gt;安装依赖包。 输入 hexo g –&gt;生成运行环境。 输入 hexo s 将生成的网页放在了本地服务器（server）。 浏览器里输入 http://localhost:4000/ , 就可以看到刚才的成果了。 回到 Git Bash，按 Ctrl+C 终止本地服务器。 部署到 Github 上 获取 Github 对应存储库(即你创建的username.github.io)的链接。eg：https://github.com/lwhluvdemo/lwhluvdemo.github.io.git 修改博客的配置文件打开blog文件夹下的_config.yml文件(我自己用的是ultraEdit,VS code、notepad++等也可以)找到 #Deployment，填入以下内容： 这里要注意，凡是修改配置文件，属性名的冒号后面一定要有一个空格才能加属性值，不然会报错 1234deploy: type: git repository: https://github.com/lwhluvdemo/lwhluvdemo.github.io.git## 用第一步得到的链接 branch: master 回到 Git Bash，输入 npm install hexo-deployer-git --save 安装 hexo-deployer-git 此步骤只需要做一次。 输入 hexo d，得到 INFO Deploy done: git 即为部署成功。 之后写博文常用hexo g -d部署。 可以使用hexo clean命令来清除缓存，也就是删除.public文件夹，如果以后出现一些看不懂的bug，可以试试先clean再重新hexo g也许可以解决。 新建博文 我们的.md博文都存放在..\\blog\\source\\_posts目录下，我们可以通过删除本地文件重新部署的方式来删除博文，当然也可以新建一个md文件。 另一种是用命令行新建，打开GitBash输入： 1hexo new \"文章标题\" 在_posts文件夹中找到刚刚新建的md文件，里面有 12345---title: 文章标题date: 创建文章的时间tags: 文章标签--- 对上面的内容进行修改，或者直接开始往下写，写完保存之后，通过hexo g、hexo d来更新你的博客。 美化 到官方主题站搜索自己喜欢的主题，都附有配置解释文档的以及使用方式 安装主题的统一方式是，打开GitBash： 1git clone 主题GitHub仓库地址 themes/主题名 打开 D:/blog/_config.yml文件，在一般在倒数第6，7行，找到theme:,后面的内容改为代码行里的主题名。 找到 # Site，添加博客名称，作者名字等。 在 language 后面填入 en 或者 zh-CN，选择英文或者中文。(一般在..\\blog\\themes\\主题名\\languages里可以看到主题支持的语言) 找到 # URL, 填入 url。比如 url: https://lwhluvdemo.github.io/。 在GitBash重新生成部署：hexo g -d. 为博客选择图床 给博文配图： 把图片存放到相应的资源文件夹，随博客一起部署到GitHub 通过利用Markdown语法给博文添加图片链接，在观看博文的时候在线加载图片。 待更新。。。","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://lwhluvdemo.github.io/tags/Hexo/"},{"name":"GitHub Pages","slug":"GitHub-Pages","permalink":"https://lwhluvdemo.github.io/tags/GitHub-Pages/"}]}]}